apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sentries.sentry.redhat.com
spec:
  group: sentry.redhat.com
  names:
    kind: Sentry
    listKind: SentryList
    plural: sentries
    singular: sentry
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            name:
              description: Name is the distinct name of the Sentry service we're running
              type: string
            postgreshost:
              description: Postgreshost is the name of server running postgres
              type: string
            postgresname:
              description: Postgresname is the name of the database within postgres
                we're using
              type: string
            postgrespassword:
              description: Postgrespassword is the name of the secret containing the
                database password
              type: string
            postgresport:
              description: Postgresport is the port on which the database server is
                listening
              format: int64
              type: integer
            postgresuser:
              description: Postgresuser is the name of the secret containing the database
                username
              type: string
            redishost:
              description: Redishost is the name of the server running redis
              type: string
            redisname:
              description: Redisname is the name of the redis instance we're using
              type: string
            redisport:
              description: Redisport is the port on which the redis server is listening
              format: int64
              type: integer
          required:
          - name
          - postgreshost
          - postgresport
          - postgresname
          - postgresuser
          - postgrespassword
          - redishost
          - redisport
          - redisname
          type: object
        status:
          properties:
            status:
              type: string
          required:
          - status
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
